- name: Mount SMB share
  hosts: swarm
  become: true
  tasks:
    - name: Ensure cifs-utils is installed
      ansible.builtin.package:
        name:
          - cifs-utils
          - python3-jsondiff
          - python3-yaml
        state: present

    - name: Mount SMB Nextcloud Data share
      ansible.posix.mount:
        src: "//{{ hostvars[var_fileserver_name].ansible_host }}/Nextcloud Data/"
        path: "{{ var_nextcloud_mount_datadir }}"
        fstype: "cifs"
        opts: "username={{ var_smb_nextcloud_user }},password={{ var_smb_nextcloud_password }},uid=33,gid=0,file_mode=0770,dir_mode=0770,mfsymlinks"
        state: "mounted"

    - name: Mount SMB Docker volumes share
      ansible.posix.mount:
        src: "//{{ hostvars[var_fileserver_name].ansible_host }}/Docker Volumes/"
        path: "{{ var_mount_volumes_dir }}"
        fstype: "cifs"
        opts: "username={{ var_smb_nextcloud_user }},password={{ var_smb_nextcloud_password }},uid=33,gid=0,,file_mode=0777,dir_mode=0777,mfsymlinks"
        state: "mounted"

- name: Nextcloud AIO
  hosts: swarm_manager[0]
  become: true

  tasks:
    - name: Copy compose file
      ansible.builtin.template:
        src: "files/compose.j2"
        dest: "/root/docker-compose.yml"
        mode: '0644'
        force: true
      vars:
        DATABASE_PASSWORD: "{{ var_database_password }}"
        FULLTEXTSEARCH_PASSWORD: "{{ var_fulltextsearch_password }}"
        IMAGINARY_SECRET: "{{ var_imaginary_secret }}"
        NC_DOMAIN: "{{ var_nc_domain }}"
        NEXTCLOUD_PASSWORD: "{{ var_nextcloud_password }}"
#        ONLYOFFICE_SECRET: "{{ var_onlyoffice_secret }}"
        RECORDING_SECRET: "{{ var_recording_secret }}"
        REDIS_PASSWORD: "{{ var_redis_password }}"
        SIGNALING_SECRET: "{{ var_signaling_secret }}"
        TALK_INTERNAL_SECRET: "{{ var_talk_internal_secret }}"
        TIMEZONE: "Europe/Berlin"
        TURN_SECRET: "{{ var_turn_secret }}"
        WHITEBOARD_SECRET: "{{ var_whiteboard_secret }}"

        CLAMAV_ENABLED: "no"
        COLLABORA_ENABLED: "no"
        FULLTEXTSEARCH_ENABLED: "no"
        IMAGINARY_ENABLED: "no"
        ONLYOFFICE_ENABLED: "no"
        TALK_ENABLED: "no"
        TALK_RECORDING_ENABLED: "no"
        WHITEBOARD_ENABLED: "no"

        APACHE_IP_BINDING: "0.0.0.0"
        APACHE_MAX_SIZE: "17179869184"
        APACHE_PORT: "443"
        COLLABORA_DICTIONARIES: "de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru"
        COLLABORA_SECCOMP_POLICY: "--o:security.seccomp=true"
        INSTALL_LATEST_MAJOR: "no"
        NEXTCLOUD_ADDITIONAL_APKS: imagemagick
        NEXTCLOUD_ADDITIONAL_PHP_EXTENSIONS: imagick
        NEXTCLOUD_DATADIR: "{{ var_nextcloud_mount_datadir }}"
        VOLUME_CIFS_SERVER: "{{ hostvars[var_fileserver_name].ansible_host }}"
        VOLUME_CIFS_SHARE: "Docker Volumes"
        VOLUME_CIFS_USER: "{{ var_smb_nextcloud_user }}"
        VOLUME_CIFS_PASSWORD: "{{ var_smb_nextcloud_password }}"
        NEXTCLOUD_MAX_TIME: "3600"
        NEXTCLOUD_MEMORY_LIMIT: 512M
        NEXTCLOUD_MOUNT: /mnt/
        NEXTCLOUD_STARTUP_APPS: "deck twofactor_totp tasks calendar contacts notes"
        NEXTCLOUD_TRUSTED_CACERTS_DIR: /usr/local/share/ca-certificates
        NEXTCLOUD_UPLOAD_LIMIT: 16G
        REMOVE_DISABLED_APPS: "yes"
        TALK_PORT: "3478"
        UPDATE_NEXTCLOUD_APPS: "no"

    - name: Create Volume folders
      ansible.builtin.file:
        path: "{{ var_mount_volumes_dir }}/{{ item }}"
        state: directory
        owner: 33
        group: 0
        mode: "0777"
      loop:
        - "nextcloud_aio_nextcloud"
        - "nextcloud_aio_apache"
        - "nextcloud_aio_database"
        - "nextcloud_aio_database_dump"
        - "nextcloud_aio_redis"
        - "nextcloud_aio_talk_recording"
        - "nextcloud_aio_clamav"
        - "nextcloud_aio_onlyoffice"
        - "nextcloud_aio_elasticsearch"

    - name: Deploy Nextcloud AIO container in Swarm mode
      community.docker.docker_stack:
        name: nextcloud_aio
        compose:
          - "/root/docker-compose.yml"
        state: present
