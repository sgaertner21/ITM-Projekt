- name: Set up BIND-DNS server
  become: true
  hosts: "{{ var_hosts_dns }}"
  tags:
    - dns
  roles:
    - role: bertvv.bind
      vars:
        bind_allow_query:
          - any
        bind_listen_ipv4:
          - any
        bind_zones:
          - name: itm.internal
            create_reverse_zones: true
            primaries:
              - "{{ hostvars[var_primary_dns_host].ansible_host }}"
            name_servers:
              - ns.itm.internal.
            hosts:
              - name: ns
                ip: "{{ hostvars[var_primary_dns_host].ansible_host }}"
                aliases:
                  - ns1
            networks:
              - "{{ var_zone_network_address }}"
            allow_update:
              - "{{ var_opnsense_ip }}"
        bind_recursion: true
        bind_forwarders: "{{ var_forwarders }}"
        bind_dnssec_enable: false
        bind_dns_keys:
          - name: opnsense
            algorithm: hmac-sha512
            secret: "yawQV7dZ1nnHSUuMWcucv1E/dIaQVegJzb228RpJdQe/WYQaiz0+aEbFOTE3OqV2qGxNZxoRZ0PsJ7VjQZjbnQ=="
        bind_extra_include_files:
          - "{{ bind_auth_file }}"

- name: Install prerequisites
  ansible.builtin.import_playbook: ../opnsense/install_prerequisites.yml

- name: Configure OPNsense for dynamic DNS updates
  hosts: "{{ var_hosts_opnsense }}"
  tags:
    - opnsense
  remote_user: root
  tasks:
    - name: Change config.xml OPNsense
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/dhcpd/lan/{{ item.key }}
        state: present
        pretty_print: true
        value: "{{ item.value }}"
      loop: "{{ xml_entries | dict2items }}"
      vars:
        xml_entries:
          enable: "1"
          ddnsdomain: itm.internal
          ddnsdomainprimary: "{{ hostvars[var_primary_dns_host].ansible_host }}"
          ddnsdomainkeyname: opnsense
          ddnsdomainkey: "yawQV7dZ1nnHSUuMWcucv1E/dIaQVegJzb228RpJdQe/WYQaiz0+aEbFOTE3OqV2qGxNZxoRZ0PsJ7VjQZjbnQ=="
          ddnsdomainalgorithm: hmac-sha512
          ddnsupdate: "1"

- name: Set OPNsense DNS Configuration
  hosts: "{{ var_hosts_opnsense }}"
  remote_user: root
  tags:
    - opnsense
  tasks:
    - name: Set Primary DNS Server
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/dnsserver
        value: "{{ hostvars[var_primary_dns_host].ansible_host }}"

    - name: Set Domain
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/domain
        value: itm.internal

    - name: Reload configuration
      changed_when: false
      ansible.builtin.command:
        cmd: /usr/local/etc/rc.reload_all