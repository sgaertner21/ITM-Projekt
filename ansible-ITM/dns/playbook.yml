# This playbook configures the BIND-DNS server and sets up OPNsense for dynamic DNS updates.

- name: Set up BIND-DNS server
  become: true
  hosts: "{{ var_hosts_dns }}"  # Target hosts defined by var_hosts_dns variable.
  tags:
    - dns
  roles:
    - role: bertvv.bind   # Use the bertvv.bind role to manage BIND-DNS.
      vars:
        # Allow any host to query DNS.
        bind_allow_query:
          - any
        # Listen on all IPv4 interfaces.
        bind_listen_ipv4:
          - any
        bind_zones:
          - name: itm.internal  # Domain zone name.
            create_reverse_zones: true  # Automatically create reverse zones.
            primaries:
              - "{{ hostvars[var_primary_dns_host].ansible_host }}"  # The primary DNS server IP.
            name_servers:
              - ns.itm.internal.  # The nameserver record for this domain.
            hosts:
              - name: ns  # Primary host name for the DNS server.
                ip: "{{ hostvars[var_primary_dns_host].ansible_host }}"  # IP of the primary DNS server.
                aliases:
                  - ns1  # Additional alias for the primary DNS host.
            networks:
              - "{{ var_zone_network_address }}"  # Network(s) allowed for the zone.
            # Permit dynamic updates from the OPNsense IP.
            allow_update:
              - "{{ var_opnsense_ip }}"
        # Enable DNS recursion.
        bind_recursion: true
        # Define upstream forwarders for DNS queries.
        bind_forwarders: "{{ var_forwarders }}"
        # Disable DNSSEC.
        bind_dnssec_enable: false
        bind_dns_keys:
          - name: opnsense
            algorithm: hmac-sha512
            # Shared secret key for dynamic DNS updates authentication.
            secret: "yawQV7dZ1nnHSUuMWcucv1E/dIaQVegJzb228RpJdQe/WYQaiz0+aEbFOTE3OqV2qGxNZxoRZ0PsJ7VjQZjbnQ=="
        bind_extra_include_files:
          # Additional configuration file to include.
          - "{{ bind_auth_file }}"

- name: Install prerequisites
  # Import and run a playbook to install prerequisites required by OPNsense configuration.
  ansible.builtin.import_playbook: ../opnsense/install_prerequisites.yml

- name: Configure OPNsense for dynamic DNS updates
  hosts: "{{ var_hosts_opnsense }}"  # OPNsense devices defined by var_hosts_opnsense.
  tags:
    - opnsense
  remote_user: root  # Connect as root to modify OPNsense config.
  tasks:
    - name: Change config.xml OPNsense
      community.general.xml:
        path: /conf/config.xml  # Path to the OPNsense XML configuration file.
        xpath: /opnsense/dhcpd/lan/{{ item.key }}  # Target XML element based on the key.
        state: present  # Ensure the element exists.
        pretty_print: true  # Format the XML neatly.
        value: "{{ item.value }}"  # Set the value from the dictionary.
      loop: "{{ xml_entries | dict2items }}"  # Loop over each key-value pair in xml_entries.
      vars:
        # Dictionary of XML entries to be set for DHCP and dynamic DNS updates.
        xml_entries:
          enable: "1"  # Enable the relevant feature.
          ddnsdomain: itm.internal  # Domain for dynamic DNS.
          ddnsdomainprimary: "{{ hostvars[var_primary_dns_host].ansible_host }}"  # Primary DNS server IP for the domain.
          ddnsdomainkeyname: opnsense  # Key name for dynamic DNS updates.
          ddnsdomainkey: "yawQV7dZ1nnHSUuMWcucv1E/dIaQVegJzb228RpJdQe/WYQaiz0+aEbFOTE3OqV2qGxNZxoRZ0PsJ7VjQZjbnQ=="  # Shared secret for authentication.
          ddnsdomainalgorithm: hmac-sha512  # Algorithm for key validation.
          ddnsupdate: "1"  # Enable dynamic DNS updates.

- name: Set OPNsense DNS Configuration
  hosts: "{{ var_hosts_opnsense }}"
  remote_user: root
  tags:
    - opnsense
  tasks:
    - name: Set Primary DNS Server
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/dnsserver  # XML element to set the system primary DNS.
        value: "{{ hostvars[var_primary_dns_host].ansible_host }}"  # Set to the primary DNS server IP.
      
    - name: Set Domain
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/domain  # XML element for the system domain configuration.
        value: itm.internal  # Set the domain to itm.internal.

    - name: Reload configuration
      # Reload the OPNsense configuration without marking the task as changed.
      changed_when: false
      ansible.builtin.command:
        cmd: /usr/local/etc/rc.reload_all  # Command to reload all OPNsense services.