- name: Nginx Webserver
  hosts: "{{ var_hosts_webserver }}"
  become: true
  tasks:
    # Install Nginx
    - name: Ensure Nginx is installed
      apt:
        name: nginx
        state: present
        update_cache: yes

    # Start and enable Nginx
    - name: Ensure Nginx is running
      service:
        name: nginx
        state: started
        enabled: true

    # Deploy custom index.html
    - name: Deploy custom index.html
      copy:
        src: ./index.html
        dest: /var/www/html/index.html
        mode: '0644'

    # Customize default Nginx configuration (optional)
    - name: Customize default Nginx configuration
      lineinfile:
        path: /etc/nginx/sites-available/default
        regexp: '^\s*index .*;$'
        line: '        index index.html;'
      notify:
        - Reload Nginx

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

- name: Set firewall rules
  hosts: "{{ var_hosts_opnsense }}"
  remote_user: root
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ hostvars[var_opnsense_firewall].ansible_host }}"
      api_key: "{{ var_opnsense_api_key }}"
      api_secret: "{{ var_opnsense_api_secret }}"
      ssl_verify: false

  tasks:
    - name: Lookup if NAT port forwarding rule already exists
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/nat/rule[target='{{ hostvars[var_webserver].ansible_host }}' and local-port='80']"
        count: true
      register: nat_rule_check

    - name: Set NAT port forwarding rule container
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/nat"
        state: present
        pretty_print: true
        add_children:
          - rule:
              _:
                - target: "{{ hostvars[var_webserver].ansible_host }}"
                - local-port: "80"
      when: nat_rule_check.count == 0

    - name: Set NAT port forwarding
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/nat/rule[target='{{ hostvars[var_webserver].ansible_host }}' and local-port='80']/{{ item.key }}"
        state: present
        pretty_print: true
        value: "{{ item.value }}"
      loop: "{{ xml_entries | dict2items }}"
      vars:
        xml_entries:
          protocol: tcp
          interface: wan
          ipprotocol: inet
          target: "{{ hostvars[var_webserver].ansible_host }}"
          local-port: "80"
          source:
          destination:
    
    - name: Set NAT port forwarding source
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/nat/rule[target='{{ hostvars[var_webserver].ansible_host }}' and local-port='80']/source"
        state: present
        pretty_print: true
        set_children:
          - any: "1"
    
    - name: Set NAT port forwarding destination
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/nat/rule[target='{{ hostvars[var_webserver].ansible_host }}' and local-port='80']/destination"
        state: present
        pretty_print: true
        set_children:
          - any: "1"
          - port: "{{ var_external_port }}"

    - name: Set OPNsense firewall rule
      ansibleguy.opnsense.rule:
        description: 'Rule for Webserver HTTP traffic'
        direction: in
        interface: ['wan']
        ip_protocol: "inet"
        protocol: "TCP"
        destination_net: "{{ hostvars[var_webserver].ansible_host }}/32"
        destination_port: "80"
        state: present
        match_fields: ['description']
