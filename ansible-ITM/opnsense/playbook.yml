- name: Install prerequisites
  ansible.builtin.import_playbook: install_prerequisites.yml

- name: Create OPNsense Ansible User and API key

  hosts: "{{ var_hosts_opnsense }}"
  remote_user: root

  tasks:
    - name: Lookup if user ansible is already present
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/user[name='ansible']
        count: true
      register: user_ansible_check

    - name: Create OPNsense Ansible User container
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system
        state: present
        pretty_print: true
        add_children:
          - user:
              _:
                - name: ansible
      when: user_ansible_check.count == 0

    - name: Create OPNsense Ansible User
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/user[name='ansible']/{{ item.key }}
        state: present
        pretty_print: true
        value: "{{ item.value }}"
      loop: "{{ xml_entries | dict2items }}"
      vars:
        xml_entries:
          password: lookup('community.general.random_string', base64=true, length=16)
          scope: user
          name: ansible
          authorizedkeys: "{{ ssh_keys | b64encode }}"
          comment: User for ansible provisioning
          uid: 2000
          shell: /bin/sh
        ssh_keys: "{{ var_ansible_public_ssh_key }}"

    - name: Add OPNsense Ansible User to Admin-Group
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/group[name='admins']/member[text()='2000']
        state: present
        pretty_print: true
        value: "2000"

    - name: Lookup if user already has an API key
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/user[name='ansible']/apikeys/item[key='{{ var_ansible_opnsense_api_key }}']
        count: true
      register: api_key_check

    - name: Create OPNsense Ansible User API key container
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/user[name='ansible']/apikeys
        state: present
        pretty_print: true

    - name: Create OPNsense Ansible User API key
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/system/user[name='ansible']/apikeys
        state: present
        pretty_print: true
        add_children:
          - item:
              _:
                - key: "{{ var_ansible_opnsense_api_key }}"
      when: api_key_check.count == 0

    - name: Add OPNsense Ansible User API key secret
      community.general.xml:
        path: /conf/config.xml
        xpath: "/opnsense/system/user[name='ansible']/apikeys/\
          item[key='{{ var_ansible_opnsense_api_key }}']/secret"
        state: present
        pretty_print: true
        value: "{{ var_ansible_opnsense_api_secret_hash}}"

    - name: Disable Unbound DNS Resolver
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/OPNsense/unboundplus/general/enabled
        state: present
        pretty_print: true
        value: "0"

    - name: Set DHCP Server DNS server
      community.general.xml:
        path: /conf/config.xml
        xpath: /opnsense/dhcpd/lan/dnsserver
        state: present
        pretty_print: true
        value: "{{ var_dhcp_dns_server }}"

    - name: Reload configuration
      changed_when: false
      ansible.builtin.command:
        cmd: /usr/local/etc/rc.reload_all